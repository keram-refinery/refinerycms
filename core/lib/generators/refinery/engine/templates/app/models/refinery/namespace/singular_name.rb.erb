module Refinery
  module <%= namespacing %>
    class <%= class_name %> < Refinery::Core::BaseModel
<% if table_name == namespacing.underscore.pluralize -%>
      self.table_name = 'refinery_<%= plural_name %>'
<% end -%>

<% if localized? -%>
      translates <%= localized_attributes.map { |a| ":#{a.name}" }.join(', ') %>
<% end -%>

<% if title_attribute.present? -%>
      validates :<%= title_attribute_name %>, presence: true, uniqueness: true

<% end -%>

      def title
<% if title_attribute.present? %>
        return self[:<%= title_attribute_name %>] if self[:<%= title_attribute_name %>].present?
<% if localized? && localized_attributes.include?(title_attribute) %>
        translation = translations.detect {|t| t.<%= title_attribute_name %>.present? }
        translation.<%= title_attribute_name %> if translation
<% end -%>
<% end -%>
      end

<% image_attributes.each do |a| -%>
      belongs_to :<%= a.name %>, class_name: '::Refinery::Image'
<% end -%>

<% resource_attributes.each do |a| -%>
      belongs_to :<%= a.name %>, class_name: '::Refinery::Resource'
<% end -%>

    end
  end
end
