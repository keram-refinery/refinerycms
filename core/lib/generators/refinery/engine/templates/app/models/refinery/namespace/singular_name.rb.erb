module Refinery
  module <%= namespacing %>
    class <%= class_name %> < Refinery::Core::BaseModel
<% if table_name == namespacing.underscore.pluralize -%>
      self.table_name = 'refinery_<%= plural_name %>'
<% end -%>

<% if localized? -%>
      translates <%= localized_attributes.map { |a| ":#{a.name}" }.join(', ') %>
<% end -%>

<% if title_attribute.present? -%>
      validates :<%= title_attribute_name %>, presence: true, uniqueness: true

<% end -%>

<% if title_attribute.nil? || title_attribute_name != 'title' %>

      def title
        "Override def title in vendor/extensions/<%= namespacing.underscore %>/app/models/refinery/<%= namespacing.underscore %>/<%= singular_name %>.rb"
        <% if title_attribute_name != 'title' -%>
          <%= title_attribute_name %>
        <% end -%>
      end
<% end -%>

<% image_attributes.each do |a| -%>
      belongs_to :<%= a.name %>, class_name: '::Refinery::Image'
<% end -%>

<% resource_attributes.each do |a| -%>
      belongs_to :<%= a.name %>, class_name: '::Refinery::Resource'
<% end -%>

<% if localized? && title_attribute.present? && localized_attributes.include?(title_attribute) %>
      def title_with_translation
        <%= title_attribute_name %>.presence || translations.detect {|t| t.<%= title_attribute_name %>.present? }.<%= title_attribute_name %>
      end

      alias_method_chain :title, :translation
<% end -%>
    end
  end
end
