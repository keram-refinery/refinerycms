module Refinery
  module Admin
    module <%= class_name.pluralize %>
      class SettingsController < Refinery::AdminController

        before_action :find_setting, only: [:edit, :update]

        def update
          if @setting.update_attributes(setting_params)
            flash[:notice] = t('refinery.crudify.updated',
              kind: t(Refinery::Setting.model_name.i18n_key, scope: 'activerecord.models'),
              what: t(@setting.name, scope: 'refinery.admin.settings'))

            redirect_back_or_default(refinery.admin_<%= namespacing.underscore %>_<%= plural_name %>_path)
          else
            render :edit
          end
        end

      protected

        def find_setting
          case (id = params[:id].to_s)
          when 'confirmation_email'
            @setting = Refinery::<%= namespacing %>::ConfirmationEmailSetting.new
          else
            @setting = Refinery::Setting.find_by(name: id, scoping: '<%= extension_name %>')
          end

          @setting || error_404
        end

        def setting_params
          params.require(:setting).permit(:value, confirmation_email: [:subject, :message])
        end

      end
    end
  end
end
