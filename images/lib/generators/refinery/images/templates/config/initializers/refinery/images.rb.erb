# encoding: utf-8
Refinery::Images.configure do |config|
  # Configures the maximum allowed upload size (in bytes) for an image
  # config.max_image_size = <%= Refinery::Images.max_image_size.inspect %>

  # Configure how many images per page should be displayed when a dialog is presented that contains images
  # config.per_dialog_page = <%= Refinery::Images.per_dialog_page.inspect %>

  # Configure how many images per page should be displayed in the list of images in the admin area
  # config.per_admin_page = <%= Refinery::Images.per_admin_page.inspect %>

  # Configure image sizes
  # config.user_image_sizes = <%= Refinery::Images.user_image_sizes.inspect %>

  # Configure white-listed mime types for validation
  # config.whitelisted_mime_types = <%= Refinery::Images.whitelisted_mime_types.inspect %>

  # Configure image view options
  # config.image_views = <%= Refinery::Images.image_views.inspect %>

  # Configure default image view
  # config.preferred_image_view = <%= Refinery::Images.preferred_image_view.inspect %>

  # Configure S3 (you can also use ENV for this)
  # The s3_backend setting by default defers to the core setting for this but can be set just for images.
  # config.s3_backend = <%= Refinery::Images.s3_backend.inspect %>
  # config.s3_bucket_name = Refinery.secret('s3_bucket_name', false)
  # config.s3_access_key_id = Refinery.secret('s3_access_key_id', false)
  # config.s3_secret_access_key = Refinery.secret('s3_secret_access_key', false)
  # config.s3_region = Refinery.secret('s3_region', false)

  # Configure Dragonfly
  # This is where in the middleware stack to insert the Dragonfly middleware
  # config.dragonfly_url_format = <%= Refinery::Images.dragonfly_url_format.inspect %>
  # config.dragonfly_url_host = <%= Refinery::Images.dragonfly_url_host.inspect %>
  # config.datastore_root_path = <%= Refinery::Images.datastore_root_path.inspect %>

  # Configure Dragonfly custom storage backend
  # The custom_backend setting by default defers to the core setting for this but can be set just for images.
  # config.custom_backend_class = <%= Refinery::Images.custom_backend_class.inspect %>
  # config.custom_backend_opts = <%= Refinery::Images.custom_backend_opts.inspect %>

  # Prevent Symbol DOS vulnerability in dragonfly
  # config.protect_from_dos_attacks = <%= Refinery::Images.protect_from_dos_attacks.inspect %>
end
