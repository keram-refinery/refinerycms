<% new_record = @image.new_record? %>
<%= form_for @image, url: (new_record ? refinery.admin_images_path : refinery.admin_image_path(@image)),
             html: { multipart: true, remote: true } do |f| %>

  <div class="clearfix">
    <div class="form-title">
      <h1>
        <% if new_record %>
          <%= t('create_new_image', scope: 'refinery.admin.images.actions') %>
        <% else %>
          <%= t('edit_image', scope: 'refinery.admin.images.actions') %>:
          <%= link_to @image.name, @image.url, target: '_blank' %>
        <% end %>
      </h1>
      <p class="less-important">
        <%= link_to refinery_plugin.title, refinery.admin_images_path %>
      </p>
    </div>

    <%= render '/refinery/admin/locale_picker', url: refinery.edit_admin_image_path(@image) unless new_record %>

  </div>

  <%= render '/refinery/admin/error_messages',
             object: @image,
             include_object_name: false %>

  <div class="clearfix">
    <div class="block-main">
      <div class="field">
        <% # we must only hint at multiple when it's a new record otherwise update fails. %>
        <%= f.file_field :image, required: new_record, multiple: new_record %>
        <p class="note">
          <%= t('.maximum_image_size', bytes: number_to_human_size(Refinery::Images.max_image_size)) %>
        </p>
      </div>

    <% unless new_record %>
      <div class="field">
        <%= refinery_form_field f, :text_field, :alt,
                    label: true, html: { class: 'widest' } -%>
      </div>

      <div class="field">
        <%= refinery_form_field f, :text_field, :caption,
                    label: true, html: { class: 'widest' } -%>
      </div>
    <% end -%>
    </div>

  <% unless new_record %>
    <div class="block-aside right-side">
      <label><%=t('.current_image') %></label>
      <p>
        <%= image_fu @thumbnail || @image, '225x255>' %>
      </p>
    </div>
  <% end -%>
  </div>


  <%= render '/refinery/admin/form_actions', f: f,
             hide_cancel: false,
             delete_title: t('delete', scope: 'refinery.admin.images'),
             delete_confirmation: (t('message', scope: 'refinery.admin.delete',
                    title: @image.image_name) unless new_record) %>
<% end %>
