<% new_record = @image.new_record? %>
<%= form_for @image, :url => (new_record ? refinery.admin_images_path) : refinery.admin_image_path(@image),
             :html => { :multipart => true, :remote => true } do |f| %>

  <%= render '/refinery/admin/error_messages',
             :object => @image,
             :include_object_name => false %>

  <div class="field clearfix">
    <% unless new_record %>
      <div id="existing-image">
        <label><%=t('.current_image') %></label>
        <%= image_fu @thumbnail || @image, '225x255>' %>
      </div>
      <p>
        <%= t('.use_current_image') %>
        <em><%= t('.or') %></em><%= t('.replace_image') %>
      </p>
    <% end %>
    <% # we must only hint at multiple when it's a new record otherwise update fails. %>
    <%= f.file_field :image, :required => true, :multiple => new_record %>
    <label id="maximum-image-size">
      <%= t('.maximum_image_size', :bytes => number_to_human_size(Refinery::Images.max_image_size)) %>
    </label>
  </div>

  <%= render '/refinery/admin/form_actions', :f => f,
             :hide_cancel => false,
             :delete_title => t('delete', :scope => 'refinery.admin.images'),
             :delete_confirmation => (t('message', :scope => 'refinery.admin.delete',
                    :title => @image.image_name) unless new_record) %>
<% end %>
